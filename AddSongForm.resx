<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>