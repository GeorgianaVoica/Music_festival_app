<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>